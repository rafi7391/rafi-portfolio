{"ast":null,"code":"import React from 'react';\nvar twitterWidgetJs = 'https://platform.twitter.com/widgets.js';\nvar methodName = 'createTimeline';\nvar TwitterTimelineEmbed = function TwitterTimelineEmbed(props) {\n  var ref = React.useRef(null);\n  var _React$useState = React.useState(true),\n    loading = _React$useState[0],\n    setLoading = _React$useState[1];\n  var buildOptions = function buildOptions() {\n    var options = Object.assign({}, props.options);\n    if (props !== null && props !== void 0 && props.autoHeight) {\n      var _ref$current, _ref$current$parentNo;\n      options.height = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : (_ref$current$parentNo = _ref$current.parentNode) === null || _ref$current$parentNo === void 0 ? void 0 : _ref$current$parentNo.offsetHeight;\n    }\n    options = Object.assign({}, options, {\n      theme: props === null || props === void 0 ? void 0 : props.theme,\n      linkColor: props === null || props === void 0 ? void 0 : props.linkColor,\n      borderColor: props === null || props === void 0 ? void 0 : props.borderColor,\n      lang: props === null || props === void 0 ? void 0 : props.lang,\n      tweetLimit: props === null || props === void 0 ? void 0 : props.tweetLimit,\n      ariaPolite: props === null || props === void 0 ? void 0 : props.ariaPolite\n    });\n    return options;\n  };\n  var buildChromeOptions = function buildChromeOptions(options) {\n    options.chrome = '';\n    if (props.noHeader) {\n      options.chrome = options.chrome + ' noheader';\n    }\n    if (props.noFooter) {\n      options.chrome = options.chrome + ' nofooter';\n    }\n    if (props.noBorders) {\n      options.chrome = options.chrome + ' noborders';\n    }\n    if (props.noScrollbar) {\n      options.chrome = options.chrome + ' noscrollbar';\n    }\n    if (props.transparent) {\n      options.chrome = options.chrome + ' transparent';\n    }\n    return options;\n  };\n  React.useEffect(function () {\n    var isComponentMounted = true;\n    var script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', function () {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName]) {\n          console.error(\"Method \" + methodName + \" is not present anymore in twttr.widget api\");\n          return;\n        }\n        var options = buildOptions();\n        options = buildChromeOptions(options);\n        window.twttr.widgets[methodName]({\n          sourceType: props.sourceType,\n          screenName: props.screenName,\n          userId: props.userId,\n          ownerScreenName: props.ownerScreenName,\n          slug: props.slug,\n          id: props.id || props.widgetId,\n          url: props.url\n        }, ref === null || ref === void 0 ? void 0 : ref.current, options).then(function (element) {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n    return function () {\n      isComponentMounted = false;\n    };\n  }, []);\n  return React.createElement(React.Fragment, null, loading && React.createElement(React.Fragment, null, props.placeholder), React.createElement(\"div\", {\n    ref: ref\n  }));\n};\nvar methodName$1 = 'createShareButton';\nvar TwitterShareButton = function TwitterShareButton(props) {\n  var ref = React.useRef(null);\n  var _React$useState = React.useState(true),\n    loading = _React$useState[0],\n    setLoading = _React$useState[1];\n  React.useEffect(function () {\n    var isComponentMounted = true;\n    var script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', function () {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName$1]) {\n          console.error(\"Method \" + methodName$1 + \" is not present anymore in twttr.widget api\");\n          return;\n        }\n        window.twttr.widgets[methodName$1](props.url, ref === null || ref === void 0 ? void 0 : ref.current, props.options).then(function (element) {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n    return function () {\n      isComponentMounted = false;\n    };\n  }, []);\n  return React.createElement(React.Fragment, null, loading && React.createElement(React.Fragment, null, props.placeholder), React.createElement(\"div\", {\n    ref: ref\n  }));\n};\nvar methodName$2 = 'createFollowButton';\nvar TwitterFollowButton = function TwitterFollowButton(props) {\n  var ref = React.useRef(null);\n  var _React$useState = React.useState(true),\n    loading = _React$useState[0],\n    setLoading = _React$useState[1];\n  React.useEffect(function () {\n    var isComponentMounted = true;\n    var script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', function () {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName$2]) {\n          console.error(\"Method \" + methodName$2 + \" is not present anymore in twttr.widget api\");\n          return;\n        }\n        window.twttr.widgets[methodName$2](props.screenName, ref === null || ref === void 0 ? void 0 : ref.current, props.options).then(function (element) {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n    return function () {\n      isComponentMounted = false;\n    };\n  }, []);\n  return React.createElement(React.Fragment, null, loading && React.createElement(React.Fragment, null, props.placeholder), React.createElement(\"div\", {\n    ref: ref\n  }));\n};\nvar methodName$3 = 'createHashtagButton';\nvar TwitterHashtagButton = function TwitterHashtagButton(props) {\n  var ref = React.useRef(null);\n  var _React$useState = React.useState(true),\n    loading = _React$useState[0],\n    setLoading = _React$useState[1];\n  React.useEffect(function () {\n    var isComponentMounted = true;\n    var script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', function () {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName$3]) {\n          console.error(\"Method \" + methodName$3 + \" is not present anymore in twttr.widget api\");\n          return;\n        }\n        window.twttr.widgets[methodName$3](props.tag, ref === null || ref === void 0 ? void 0 : ref.current, props.options).then(function (element) {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n    return function () {\n      isComponentMounted = false;\n    };\n  }, []);\n  return React.createElement(React.Fragment, null, loading && React.createElement(React.Fragment, null, props.placeholder), React.createElement(\"div\", {\n    ref: ref\n  }));\n};\nvar methodName$4 = 'createMentionButton';\nvar TwitterMentionButton = function TwitterMentionButton(props) {\n  var ref = React.useRef(null);\n  var _React$useState = React.useState(true),\n    loading = _React$useState[0],\n    setLoading = _React$useState[1];\n  React.useEffect(function () {\n    var isComponentMounted = true;\n    var script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', function () {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName$4]) {\n          console.error(\"Method \" + methodName$4 + \" is not present anymore in twttr.widget api\");\n          return;\n        }\n        window.twttr.widgets[methodName$4](props.screenName, ref === null || ref === void 0 ? void 0 : ref.current, props.options).then(function (element) {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n    return function () {\n      isComponentMounted = false;\n    };\n  }, []);\n  return React.createElement(React.Fragment, null, loading && React.createElement(React.Fragment, null, props.placeholder), React.createElement(\"div\", {\n    ref: ref\n  }));\n};\nvar methodName$5 = 'createTweet';\nvar TwitterTweetEmbed = function TwitterTweetEmbed(props) {\n  var ref = React.useRef(null);\n  var _React$useState = React.useState(true),\n    loading = _React$useState[0],\n    setLoading = _React$useState[1];\n  React.useEffect(function () {\n    var isComponentMounted = true;\n    var script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', function () {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName$5]) {\n          console.error(\"Method \" + methodName$5 + \" is not present anymore in twttr.widget api\");\n          return;\n        }\n        window.twttr.widgets[methodName$5](props.tweetId, ref === null || ref === void 0 ? void 0 : ref.current, props.options).then(function (element) {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n    return function () {\n      isComponentMounted = false;\n    };\n  }, []);\n  return React.createElement(React.Fragment, null, loading && React.createElement(React.Fragment, null, props.placeholder), React.createElement(\"div\", {\n    ref: ref\n  }));\n};\nvar methodName$6 = 'createMoment';\nvar TwitterMomentShare = function TwitterMomentShare(props) {\n  var ref = React.useRef(null);\n  var _React$useState = React.useState(true),\n    loading = _React$useState[0],\n    setLoading = _React$useState[1];\n  React.useEffect(function () {\n    var isComponentMounted = true;\n    var script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', function () {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName$6]) {\n          console.error(\"Method \" + methodName$6 + \" is not present anymore in twttr.widget api\");\n          return;\n        }\n        window.twttr.widgets[methodName$6](props.momentId, ref === null || ref === void 0 ? void 0 : ref.current, props.options).then(function (element) {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n    return function () {\n      isComponentMounted = false;\n    };\n  }, []);\n  return React.createElement(React.Fragment, null, loading && React.createElement(React.Fragment, null, props.placeholder), React.createElement(\"div\", {\n    ref: ref\n  }));\n};\nvar methodName$7 = 'createDMButton';\nvar TwitterDMButton = function TwitterDMButton(props) {\n  var ref = React.useRef(null);\n  var _React$useState = React.useState(true),\n    loading = _React$useState[0],\n    setLoading = _React$useState[1];\n  React.useEffect(function () {\n    var isComponentMounted = true;\n    var script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', function () {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName$7]) {\n          console.error(\"Method \" + methodName$7 + \" is not present anymore in twttr.widget api\");\n          return;\n        }\n        window.twttr.widgets[methodName$7](props.id, ref === null || ref === void 0 ? void 0 : ref.current, props.options).then(function (element) {\n          if (isComponentMounted) {\n            setLoading(false);\n            if (props.onLoad) {\n              props.onLoad(element);\n            }\n          }\n        });\n      }\n    });\n    return function () {\n      isComponentMounted = false;\n    };\n  }, []);\n  return React.createElement(React.Fragment, null, loading && React.createElement(React.Fragment, null, props.placeholder), React.createElement(\"div\", {\n    ref: ref\n  }));\n};\nvar methodName$8 = 'createVideo';\nvar TwitterVideoEmbed = function TwitterVideoEmbed(props) {\n  var ref = React.useRef(null);\n  var _React$useState = React.useState(true),\n    loading = _React$useState[0],\n    setLoading = _React$useState[1];\n  React.useEffect(function () {\n    var isComponentMounted = true;\n    var script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', function () {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName$8]) {\n          console.error(\"Method \" + methodName$8 + \" is not present anymore in twttr.widget api\");\n          return;\n        }\n        window.twttr.widgets[methodName$8](props.id, ref === null || ref === void 0 ? void 0 : ref.current).then(function (element) {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n    return function () {\n      isComponentMounted = false;\n    };\n  }, []);\n  return React.createElement(React.Fragment, null, loading && React.createElement(React.Fragment, null, props.placeholder), React.createElement(\"div\", {\n    ref: ref\n  }));\n};\nvar methodName$9 = 'createPeriscopeOnAirButton';\nvar TwitterOnAirButton = function TwitterOnAirButton(props) {\n  var ref = React.useRef(null);\n  var _React$useState = React.useState(true),\n    loading = _React$useState[0],\n    setLoading = _React$useState[1];\n  React.useEffect(function () {\n    var isComponentMounted = true;\n    var script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', function () {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName$9]) {\n          console.error(\"Method \" + methodName$9 + \" is not present anymore in twttr.widget api\");\n          return;\n        }\n        window.twttr.widgets[methodName$9](props.username, ref === null || ref === void 0 ? void 0 : ref.current, props.options).then(function (element) {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n    return function () {\n      isComponentMounted = false;\n    };\n  }, []);\n  return React.createElement(React.Fragment, null, loading && React.createElement(React.Fragment, null, props.placeholder), React.createElement(\"div\", {\n    ref: ref\n  }));\n};\nexport { TwitterDMButton, TwitterFollowButton, TwitterHashtagButton, TwitterMentionButton, TwitterMomentShare, TwitterOnAirButton, TwitterShareButton, TwitterTimelineEmbed, TwitterTweetEmbed, TwitterVideoEmbed };","map":{"version":3,"names":["twitterWidgetJs","methodName","TwitterTimelineEmbed","props","ref","React","useRef","_React$useState","useState","loading","setLoading","buildOptions","options","Object","assign","autoHeight","_ref$current","_ref$current$parentNo","height","current","parentNode","offsetHeight","theme","linkColor","borderColor","lang","tweetLimit","ariaPolite","buildChromeOptions","chrome","noHeader","noFooter","noBorders","noScrollbar","transparent","useEffect","isComponentMounted","script","require","window","twttr","console","error","widgets","sourceType","screenName","userId","ownerScreenName","slug","id","widgetId","url","then","element","onLoad","createElement","Fragment","placeholder","methodName$1","TwitterShareButton","methodName$2","TwitterFollowButton","methodName$3","TwitterHashtagButton","tag","methodName$4","TwitterMentionButton","methodName$5","TwitterTweetEmbed","tweetId","methodName$6","TwitterMomentShare","momentId","methodName$7","TwitterDMButton","methodName$8","TwitterVideoEmbed","methodName$9","TwitterOnAirButton","username"],"sources":["C:\\Users\\rafi3\\OneDrive\\Desktop\\Rafi-portfolio\\rafi-portfolio\\node_modules\\react-twitter-embed\\src\\components\\twiter-widget-url.ts","C:\\Users\\rafi3\\OneDrive\\Desktop\\Rafi-portfolio\\rafi-portfolio\\node_modules\\react-twitter-embed\\src\\components\\TwitterTimelineEmbed.tsx","C:\\Users\\rafi3\\OneDrive\\Desktop\\Rafi-portfolio\\rafi-portfolio\\node_modules\\react-twitter-embed\\src\\components\\TwitterShareButton.tsx","C:\\Users\\rafi3\\OneDrive\\Desktop\\Rafi-portfolio\\rafi-portfolio\\node_modules\\react-twitter-embed\\src\\components\\TwitterFollowButton.tsx","C:\\Users\\rafi3\\OneDrive\\Desktop\\Rafi-portfolio\\rafi-portfolio\\node_modules\\react-twitter-embed\\src\\components\\TwitterHashtagButton.tsx","C:\\Users\\rafi3\\OneDrive\\Desktop\\Rafi-portfolio\\rafi-portfolio\\node_modules\\react-twitter-embed\\src\\components\\TwitterMentionButton.tsx","C:\\Users\\rafi3\\OneDrive\\Desktop\\Rafi-portfolio\\rafi-portfolio\\node_modules\\react-twitter-embed\\src\\components\\TwitterTweetEmbed.tsx","C:\\Users\\rafi3\\OneDrive\\Desktop\\Rafi-portfolio\\rafi-portfolio\\node_modules\\react-twitter-embed\\src\\components\\TwitterMomentShare.tsx","C:\\Users\\rafi3\\OneDrive\\Desktop\\Rafi-portfolio\\rafi-portfolio\\node_modules\\react-twitter-embed\\src\\components\\TwitterDMButton.tsx","C:\\Users\\rafi3\\OneDrive\\Desktop\\Rafi-portfolio\\rafi-portfolio\\node_modules\\react-twitter-embed\\src\\components\\TwitterVideoEmbed.tsx","C:\\Users\\rafi3\\OneDrive\\Desktop\\Rafi-portfolio\\rafi-portfolio\\node_modules\\react-twitter-embed\\src\\components\\TwitterOnAirButton.tsx"],"sourcesContent":["const twitterWidgetJs = 'https://platform.twitter.com/widgets.js';\n\nexport default twitterWidgetJs;\n","import React from 'react';\nimport twitterWidgetJs from './twiter-widget-url';\n\ndeclare global {\n  interface Window {\n    twttr: any;\n  }\n}\n\ninterface JSONObject {\n  [k: string]: any;\n}\n\nexport interface TwitterTimelineEmbedBase {\n  /**\n   * Additional options to pass to twitter widget plugin\n   */\n  options?: JSONObject;\n  /**\n   * Automatically fit into parent container height\n   */\n  autoHeight?: boolean;\n  /**\n   * With dark or light theme\n   */\n  theme?: 'dark' | 'light';\n  /**\n   * With custom link colors. Note: Only Hex colors are supported.\n   */\n  linkColor?: string;\n  /**\n   * With custom border colors. Note: Only Hex colors are supported.\n   */\n  borderColor?: string;\n  /**\n   * Hide the header from timeline\n   */\n  noHeader?: boolean;\n  /**\n   * Hide the footer from timeline\n   */\n  noFooter?: boolean;\n  /**\n   * Hide the border from timeline\n   */\n  noBorders?: boolean;\n  /**\n   * Hide the scrollbars\n   */\n  noScrollbar?: boolean;\n  /**\n   * Enable Transparancy\n   */\n  transparent?: boolean;\n  /**\n   * Custom language code. Supported codes here: https://developer.twitter.com/en/docs/twitter-for-websites/twitter-for-websites-supported-languages/overview.html\n   */\n  lang?: string;\n  /**\n   * ariaPolite\n   */\n  ariaPolite?: 'polite' | 'assertive' | 'rude';\n  /**\n   * Limit of tweets to be shown\n   */\n  tweetLimit?: number;\n  /**\n   * Placeholder while tweet is loading\n   */\n  placeholder?: string | React.ReactNode;\n  /**\n   * Function to execute after load, return html element\n   */\n  onLoad?: (element: any) => void;\n}\n\nexport interface TwitterTimelineEmbedSourceScreenName\n  extends TwitterTimelineEmbedBase {\n  /**\n   * This can be either of profile, likes\n   */\n  sourceType: 'profile' | 'likes';\n  /**\n   * username of twitter handle as String\n   */\n  screenName: string;\n}\n\nexport interface TwitterTimelineEmbedSourceUserId\n  extends TwitterTimelineEmbedBase {\n  /**\n   * This can be either of profile, likes\n   */\n  sourceType: 'profile' | 'likes';\n  /**\n   * UserId of twitter handle as number\n   */\n  userId: string;\n}\n\nexport interface TwitterTimelineEmbedSourceTimeline\n  extends TwitterTimelineEmbedBase {\n  /**\n   * This can be either of timeline\n   */\n  sourceType: 'timeline';\n  /**\n   * To show list, unique list id\n   * Also used with collections, in that case its valid collection id\n   */\n  id: string;\n}\n\nexport interface TwitterTimelineEmbedSourceTimelineWidget\n  extends TwitterTimelineEmbedBase {\n  /**\n   * This can be either of timeline\n   */\n  sourceType: 'timeline';\n  /**\n   * To show list, unique list id\n   * Also used with collections, in that case its valid collection id\n   */\n  widgetId: string;\n}\n\nexport interface TwitterTimelineEmbedSourceList\n  extends TwitterTimelineEmbedBase {\n  /**\n   * This can be either of list\n   */\n  sourceType: 'list';\n  /**\n   * To show list, used along with slug\n   */\n  ownerScreenName: string;\n  /**\n   * To show list, used along with ownerScreenName\n   */\n  slug: string;\n}\n\nexport interface TwitterTimelineEmbedSourceListId\n  extends TwitterTimelineEmbedBase {\n  /**\n   * This can be either of list\n   */\n  sourceType: 'list';\n  /**\n   * To show list, unique list id\n   * Also used with collections, in that case its valid collection id\n   */\n  id: string | number;\n}\n\nexport interface TwitterTimelineEmbedSourceCollectionId\n  extends TwitterTimelineEmbedBase {\n  /**\n   * This can be collection\n   */\n  sourceType: 'collection';\n  /**\n   * To show list, unique list id\n   * Also used with collections, in that case its valid collection id\n   */\n  id: string | number;\n}\n\nexport interface TwitterTimelineEmbedSourceCollectionUrl\n  extends TwitterTimelineEmbedBase {\n  /**\n   * This can be collection\n   */\n  sourceType: 'collection';\n  /**\n   * To show list, unique list url\n   * Also used with collections, in that case its valid collection id\n   */\n  url: string;\n}\n\nexport interface TwitterTimelineEmbedSourceUrl\n  extends TwitterTimelineEmbedBase {\n  /**\n   * This can be url\n   */\n  sourceType: 'url';\n  /**\n   * To show twitter content with url.\n   * Supported content includes profiles, likes, lists, and collections.\n   */\n  url: string;\n}\n\nexport interface TwitterTimelineEmbedSourceWidget\n  extends TwitterTimelineEmbedBase {\n  /**\n   * This can be widget\n   */\n  sourceType: 'widget';\n  /**\n   * To show custom widget\n   */\n  widgetId: string;\n}\n\nexport type TwitterTimelineEmbedPropsType =\n  | TwitterTimelineEmbedSourceScreenName\n  | TwitterTimelineEmbedSourceUserId\n  | TwitterTimelineEmbedSourceTimeline\n  | TwitterTimelineEmbedSourceTimelineWidget\n  | TwitterTimelineEmbedSourceList\n  | TwitterTimelineEmbedSourceListId\n  | TwitterTimelineEmbedSourceCollectionId\n  | TwitterTimelineEmbedSourceCollectionUrl\n  | TwitterTimelineEmbedSourceUrl\n  | TwitterTimelineEmbedSourceWidget;\n\n// export interface TwitterTimelineEmbedProps {\n//   sourceType: 'profile' | 'likes' | 'list' | 'collection' | 'URL' | 'widget'\n//   url: string;\n//   options?: JSONObject,\n//   placeholder?: string | React.ReactNode;\n//   onLoad?: (element: any) => void;\n// };\n\nconst methodName = 'createTimeline';\n\nconst TwitterTimelineEmbed = (props: TwitterTimelineEmbedPropsType): any => {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const [loading, setLoading] = React.useState(true);\n\n  const buildOptions = () => {\n    let options = Object.assign({}, props.options);\n    if (props?.autoHeight) {\n      options.height = (ref.current?.parentNode as HTMLElement)?.offsetHeight;\n    }\n\n    options = Object.assign({}, options, {\n      theme: props?.theme,\n      linkColor: props?.linkColor,\n      borderColor: props?.borderColor,\n      lang: props?.lang,\n      tweetLimit: props?.tweetLimit,\n      ariaPolite: props?.ariaPolite\n    });\n\n    return options;\n  };\n\n  const buildChromeOptions = (options: JSONObject) => {\n    options.chrome = '';\n    if (props.noHeader) {\n      options.chrome = options.chrome + ' noheader';\n    }\n    if (props.noFooter) {\n      options.chrome = options.chrome + ' nofooter';\n    }\n    if (props.noBorders) {\n      options.chrome = options.chrome + ' noborders';\n    }\n    if (props.noScrollbar) {\n      options.chrome = options.chrome + ' noscrollbar';\n    }\n    if (props.transparent) {\n      options.chrome = options.chrome + ' transparent';\n    }\n\n    return options;\n  };\n\n  React.useEffect(() => {\n    let isComponentMounted = true;\n    const script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', () => {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName]) {\n          console.error(\n            `Method ${methodName} is not present anymore in twttr.widget api`\n          );\n          return;\n        }\n\n        let options = buildOptions();\n        /** Append chrome options */\n        options = buildChromeOptions(options);\n\n        window.twttr.widgets[methodName](\n          {\n            // @ts-ignore\n            sourceType: props.sourceType,\n            // @ts-ignore\n            screenName: props.screenName,\n            // @ts-ignore\n            userId: props.userId,\n            // @ts-ignore\n            ownerScreenName: props.ownerScreenName,\n            // @ts-ignore\n            slug: props.slug,\n            // @ts-ignore\n            id: props.id || props.widgetId,\n            // @ts-ignore\n            url: props.url\n          },\n          ref?.current,\n          options\n        ).then((element: any) => {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n\n    // cleaning up\n    return () => {\n      isComponentMounted = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && <React.Fragment>{props.placeholder}</React.Fragment>}\n      <div ref={ref} />\n    </React.Fragment>\n  );\n};\n\nexport default TwitterTimelineEmbed;\n","import React from 'react';\nimport twitterWidgetJs from './twiter-widget-url';\n\ndeclare global {\n  interface Window {\n    twttr: any;\n  }\n}\n\ninterface JSONObject {\n  [k: string]: any;\n}\n\nexport interface TwitterShareButtonProps {\n  /**\n   * Url for sharing\n   */\n  url: string;\n  /**\n   * Additional options for overriding config. Details at : https://dev.twitter.com/web/tweet-button/parameters\n   */\n  options?: JSONObject;\n  /**\n   * Placeholder while tweet is loading\n   */\n  placeholder?: string | React.ReactNode;\n  /**\n   * Function to execute after load, return html element\n   */\n  onLoad?: (element: any) => void;\n}\n\nconst methodName = 'createShareButton';\n\nconst TwitterShareButton = (props: TwitterShareButtonProps): any => {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    let isComponentMounted = true;\n    const script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', () => {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName]) {\n          console.error(\n            `Method ${methodName} is not present anymore in twttr.widget api`\n          );\n          return;\n        }\n\n        window.twttr.widgets[methodName](\n          props.url,\n          ref?.current,\n          props.options\n        ).then((element: any) => {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n\n    // cleaning up\n    return () => {\n      isComponentMounted = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && <React.Fragment>{props.placeholder}</React.Fragment>}\n      <div ref={ref} />\n    </React.Fragment>\n  );\n};\n\nexport default TwitterShareButton;\n","import React from 'react';\nimport twitterWidgetJs from './twiter-widget-url';\n\ndeclare global {\n  interface Window {\n    twttr: any;\n  }\n}\n\ninterface JSONObject {\n  [k: string]: any;\n}\n\nexport interface TwitterFollowButtonProps {\n  /**\n   * Username of twitter user which will be followed on click\n   */\n  screenName: string;\n  /**\n   * Additional options to be added to the button\n   */\n  options?: JSONObject;\n  /**\n   * Placeholder while tweet is loading\n   */\n  placeholder?: string | React.ReactNode;\n  /**\n   * Function to execute after load, return html element\n   */\n  onLoad?: (element: any) => void;\n}\n\nconst methodName = 'createFollowButton';\n\nconst TwitterFollowButton = (props: TwitterFollowButtonProps): any => {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    let isComponentMounted = true;\n    const script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', () => {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName]) {\n          console.error(\n            `Method ${methodName} is not present anymore in twttr.widget api`\n          );\n          return;\n        }\n\n        window.twttr.widgets[methodName](\n          props.screenName,\n          ref?.current,\n          props.options\n        ).then((element: any) => {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n\n    // cleaning up\n    return () => {\n      isComponentMounted = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && <React.Fragment>{props.placeholder}</React.Fragment>}\n      <div ref={ref} />\n    </React.Fragment>\n  );\n};\n\nexport default TwitterFollowButton;\n","import React from 'react';\nimport twitterWidgetJs from './twiter-widget-url';\n\ndeclare global {\n  interface Window {\n    twttr: any;\n  }\n}\n\ninterface JSONObject {\n  [k: string]: any;\n}\n\nexport interface TwitterHashtagButtonProps {\n  /**\n   * Tag name for hashtag button\n   */\n  tag: string;\n  /**\n   * Additional options to be added to the button\n   */\n  options?: JSONObject;\n  /**\n   * Placeholder while tweet is loading\n   */\n  placeholder?: string | React.ReactNode;\n  /**\n   * Function to execute after load, return html element\n   */\n  onLoad?: (element: any) => void;\n}\n\nconst methodName = 'createHashtagButton';\n\nconst TwitterHashtagButton = (props: TwitterHashtagButtonProps): any => {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    let isComponentMounted = true;\n    const script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', () => {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName]) {\n          console.error(\n            `Method ${methodName} is not present anymore in twttr.widget api`\n          );\n          return;\n        }\n\n        window.twttr.widgets[methodName](\n          props.tag,\n          ref?.current,\n          props.options\n        ).then((element: any) => {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n\n    // cleaning up\n    return () => {\n      isComponentMounted = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && <React.Fragment>{props.placeholder}</React.Fragment>}\n      <div ref={ref} />\n    </React.Fragment>\n  );\n};\n\nexport default TwitterHashtagButton;\n","import React from 'react';\nimport twitterWidgetJs from './twiter-widget-url';\n\ndeclare global {\n  interface Window {\n    twttr: any;\n  }\n}\n\ninterface JSONObject {\n  [k: string]: any;\n}\n\nexport interface TwitterMentionButtonProps {\n  /**\n   * Username to which you will need to tweet\n   */\n  screenName: string;\n  /**\n   * Additional options for overriding config.\n   */\n  options?: JSONObject;\n  /**\n   * Placeholder while tweet is loading\n   */\n  placeholder?: string | React.ReactNode;\n  /**\n   * Function to execute after load, return html element\n   */\n  onLoad?: (element: any) => void;\n}\n\nconst methodName = 'createMentionButton';\n\nconst TwitterMentionButton = (props: TwitterMentionButtonProps): any => {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    let isComponentMounted = true;\n    const script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', () => {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName]) {\n          console.error(\n            `Method ${methodName} is not present anymore in twttr.widget api`\n          );\n          return;\n        }\n\n        window.twttr.widgets[methodName](\n          props.screenName,\n          ref?.current,\n          props.options\n        ).then((element: any) => {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n\n    // cleaning up\n    return () => {\n      isComponentMounted = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && <React.Fragment>{props.placeholder}</React.Fragment>}\n      <div ref={ref} />\n    </React.Fragment>\n  );\n};\n\nexport default TwitterMentionButton;\n","import React from 'react';\nimport twitterWidgetJs from './twiter-widget-url';\n\ndeclare global {\n  interface Window {\n    twttr: any;\n  }\n}\n\ninterface JSONObject {\n  [k: string]: any;\n}\n\nexport interface TwitterTweetEmbedProps {\n  /**\n   * Tweet id that needs to be shown\n   */\n  tweetId: string;\n  /**\n   * Additional options to pass to twitter widget plugin\n   */\n  options?: JSONObject;\n  /**\n   * Placeholder while tweet is loading\n   */\n  placeholder?: string | React.ReactNode;\n  /**\n   * Function to execute after load, return html element\n   */\n  onLoad?: (element: any) => void;\n}\n\nconst methodName = 'createTweet';\n\nconst TwitterTweetEmbed = (props: TwitterTweetEmbedProps): any => {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    let isComponentMounted = true;\n    const script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', () => {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName]) {\n          console.error(\n            `Method ${methodName} is not present anymore in twttr.widget api`\n          );\n          return;\n        }\n\n        window.twttr.widgets[methodName](\n          props.tweetId,\n          ref?.current,\n          props.options\n        ).then((element: any) => {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n\n    // cleaning up\n    return () => {\n      isComponentMounted = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && <React.Fragment>{props.placeholder}</React.Fragment>}\n      <div ref={ref} />\n    </React.Fragment>\n  );\n};\n\nexport default TwitterTweetEmbed;\n","import React from 'react';\nimport twitterWidgetJs from './twiter-widget-url';\n\ndeclare global {\n  interface Window {\n    twttr: any;\n  }\n}\n\ninterface JSONObject {\n  [k: string]: any;\n}\n\nexport interface TwitterMomentShareProps {\n  /**\n   * id of Twitter moment to show\n   */\n  momentId: string;\n  /**\n   * Additional options for overriding config.\n   */\n  options?: JSONObject;\n  /**\n   * Placeholder while tweet is loading\n   */\n  placeholder?: string | React.ReactNode;\n  /**\n   * Function to execute after load, return html element\n   */\n  onLoad?: (element: any) => void;\n}\n\nconst methodName = 'createMoment';\n\nconst TwitterMomentShare = (props: TwitterMomentShareProps) => {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    let isComponentMounted = true;\n    const script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', () => {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName]) {\n          console.error(\n            `Method ${methodName} is not present anymore in twttr.widget api`\n          );\n          return;\n        }\n\n        window.twttr.widgets[methodName](\n          props.momentId,\n          ref?.current,\n          props.options\n        ).then((element: any) => {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n\n    // cleaning up\n    return () => {\n      isComponentMounted = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && <React.Fragment>{props.placeholder}</React.Fragment>}\n      <div ref={ref} />\n    </React.Fragment>\n  );\n};\n\nexport default TwitterMomentShare;\n","import React from 'react';\nimport twitterWidgetJs from './twiter-widget-url';\n\ndeclare global {\n  interface Window {\n    twttr: any;\n  }\n}\n\ninterface JSONObject {\n  [k: string]: any;\n}\n\nexport interface TwitterDMButtonProps {\n  /**\n   * Twitter user id for DM button\n   */\n  id: number;\n  /**\n   * Additional options to be added to the button\n   */\n  options?: JSONObject;\n  /**\n   * Placeholder while tweet is loading\n   */\n  placeholder?: string | React.ReactNode;\n  /**\n   * Function to execute after load, return html element\n   */\n  onLoad?: (element: any) => void;\n}\n\nconst methodName = 'createDMButton';\n\nconst TwitterDMButton = (props: TwitterDMButtonProps): any => {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    let isComponentMounted = true;\n    const script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', () => {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName]) {\n          console.error(\n            `Method ${methodName} is not present anymore in twttr.widget api`\n          );\n          return;\n        }\n\n        window.twttr.widgets[methodName](\n          props.id,\n          ref?.current,\n          props.options\n        ).then((element: any) => {\n          if (isComponentMounted) {\n            setLoading(false);\n            if (props.onLoad) {\n              props.onLoad(element);\n            }\n          }\n        });\n      }\n    });\n\n    // cleaning up\n    return () => {\n      isComponentMounted = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && <React.Fragment>{props.placeholder}</React.Fragment>}\n      <div ref={ref} />\n    </React.Fragment>\n  );\n};\n\nexport default TwitterDMButton;\n","import React from 'react';\nimport twitterWidgetJs from './twiter-widget-url';\n\ndeclare global {\n  interface Window {\n    twttr: any;\n  }\n}\n\nexport interface TwitterVideoEmbedProps {\n  /**\n   * Id of video tweet.\n   */\n  id: string;\n  /**\n   * Placeholder while tweet is loading\n   */\n  placeholder?: string | React.ReactNode;\n  /**\n   * Function to execute after load, return html element\n   */\n  onLoad?: (element: any) => void;\n}\n\nconst methodName = 'createVideo';\n\nconst TwitterVideoEmbed = (props: TwitterVideoEmbedProps): any => {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    let isComponentMounted = true;\n    const script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', () => {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName]) {\n          console.error(\n            `Method ${methodName} is not present anymore in twttr.widget api`\n          );\n          return;\n        }\n\n        window.twttr.widgets[methodName](props.id, ref?.current).then(\n          (element: any) => {\n            setLoading(false);\n            if (props.onLoad) {\n              props.onLoad(element);\n            }\n          }\n        );\n      }\n    });\n\n    // cleaning up\n    return () => {\n      isComponentMounted = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && <React.Fragment>{props.placeholder}</React.Fragment>}\n      <div ref={ref} />\n    </React.Fragment>\n  );\n};\n\nexport default TwitterVideoEmbed;\n","import React from 'react';\nimport twitterWidgetJs from './twiter-widget-url';\n\ndeclare global {\n  interface Window {\n    twttr: any;\n  }\n}\n\ninterface JSONObject {\n  [k: string]: any;\n}\n\nexport interface TwitterOnAirButtonProps {\n  /**\n   * Username for which you require periscope on air button\n   */\n  username: string;\n  /**\n   * Additional options for overriding config.\n   */\n  options?: JSONObject;\n  /**\n   * Placeholder while tweet is loading\n   */\n  placeholder?: string | React.ReactNode;\n  /**\n   * Function to execute after load, return html element\n   */\n  onLoad?: (element: any) => void;\n}\n\nconst methodName = 'createPeriscopeOnAirButton';\n\nconst TwitterOnAirButton = (props: TwitterOnAirButtonProps): any => {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    let isComponentMounted = true;\n    const script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', () => {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName]) {\n          console.error(\n            `Method ${methodName} is not present anymore in twttr.widget api`\n          );\n          return;\n        }\n\n        window.twttr.widgets[methodName](\n          props.username,\n          ref?.current,\n          props.options\n        ).then((element: any) => {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n\n    // cleaning up\n    return () => {\n      isComponentMounted = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && <React.Fragment>{props.placeholder}</React.Fragment>}\n      <div ref={ref} />\n    </React.Fragment>\n  );\n};\n\nexport default TwitterOnAirButton;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}