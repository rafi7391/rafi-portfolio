{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rafi3\\\\OneDrive\\\\Desktop\\\\Rafi-portfolio\\\\rafi-portfolio\\\\src\\\\components\\\\ToggleSwitch\\\\ToggleSwitch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport emoji from \"react-easy-emoji\";\nimport StyleContext from \"../../contexts/StyleContext\";\nimport \"./ToggleSwitch.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleSwitch = () => {\n  _s();\n  const {\n    isDark\n  } = useContext(StyleContext);\n  const [isChecked, setChecked] = useState(isDark);\n  const styleContext = useContext(StyleContext);\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"switch\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: isDark,\n      onChange: () => {\n        styleContext.changeTheme();\n        setChecked(!isChecked);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"slider round\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"emoji\",\n        children: isChecked ? emoji(\"üåú\") : emoji(\"‚òÄÔ∏è\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(ToggleSwitch, \"5Di3PZCvO15K+apZtXYHxM3NjU4=\");\n_c = ToggleSwitch;\nexport default ToggleSwitch;\nvar _c;\n$RefreshReg$(_c, \"ToggleSwitch\");","map":{"version":3,"names":["React","useState","useContext","emoji","StyleContext","jsxDEV","_jsxDEV","ToggleSwitch","_s","isDark","isChecked","setChecked","styleContext","className","children","type","checked","onChange","changeTheme","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rafi3/OneDrive/Desktop/Rafi-portfolio/rafi-portfolio/src/components/ToggleSwitch/ToggleSwitch.js"],"sourcesContent":["import React, {useState, useContext} from \"react\";\nimport emoji from \"react-easy-emoji\";\nimport StyleContext from \"../../contexts/StyleContext\";\nimport \"./ToggleSwitch.scss\";\n\nconst ToggleSwitch = () => {\n  const {isDark} = useContext(StyleContext);\n  const [isChecked, setChecked] = useState(isDark);\n  const styleContext = useContext(StyleContext);\n\n  return (\n    <label className=\"switch\">\n      <input\n        type=\"checkbox\"\n        checked={isDark}\n        onChange={() => {\n          styleContext.changeTheme();\n          setChecked(!isChecked);\n        }}\n      />\n      <span className=\"slider round\">\n        <span className=\"emoji\">{isChecked ? emoji(\"üåú\") : emoji(\"‚òÄÔ∏è\")}</span>\n      </span>\n    </label>\n  );\n};\nexport default ToggleSwitch;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,UAAU,QAAO,OAAO;AACjD,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,YAAY,MAAM,6BAA6B;AACtD,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAACC;EAAM,CAAC,GAAGP,UAAU,CAACE,YAAY,CAAC;EACzC,MAAM,CAACM,SAAS,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAACQ,MAAM,CAAC;EAChD,MAAMG,YAAY,GAAGV,UAAU,CAACE,YAAY,CAAC;EAE7C,oBACEE,OAAA;IAAOO,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACvBR,OAAA;MACES,IAAI,EAAC,UAAU;MACfC,OAAO,EAAEP,MAAO;MAChBQ,QAAQ,EAAEA,CAAA,KAAM;QACdL,YAAY,CAACM,WAAW,CAAC,CAAC;QAC1BP,UAAU,CAAC,CAACD,SAAS,CAAC;MACxB;IAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACFhB,OAAA;MAAMO,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC5BR,OAAA;QAAMO,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAEJ,SAAS,GAAGP,KAAK,CAAC,IAAI,CAAC,GAAGA,KAAK,CAAC,IAAI;MAAC;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ,CAAC;AAACd,EAAA,CApBID,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAqBlB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}